/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENVIEWBASE_HPP
#define SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_screen/screenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/AnimatedImage.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndOverwrite.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class screenViewBase : public touchgfx::View<screenPresenter>
{
public:
    screenViewBase();
    virtual ~screenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void add_new_data()
    {
        // Override and implement this function in screen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::AnimatedImage animatedImage1;
    touchgfx::GraphWrapAndOverwrite<100> dynamicGraph1;
    touchgfx::GraphElementHistogram dynamicGraph1Histogram1;
    touchgfx::GraphElementGridX dynamicGraph1MajorXAxisGrid;
touchgfx::GraphElementVerticalGapLine dynamicGraph1VerticalFrontline;
    touchgfx::TextAreaWithTwoWildcards stat_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t STAT_1BUFFER1_SIZE = 16;
    touchgfx::Unicode::UnicodeChar stat_1Buffer1[STAT_1BUFFER1_SIZE];
    static const uint16_t STAT_1BUFFER2_SIZE = 16;
    touchgfx::Unicode::UnicodeChar stat_1Buffer2[STAT_1BUFFER2_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<screenViewBase, const touchgfx::AnimatedImage&> animationEndedCallback;

    /*
     * Callback Handler Declarations
     */
    void animationEndedCallbackHandler(const touchgfx::AnimatedImage& src);

};

#endif // SCREENVIEWBASE_HPP
