/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"

screenViewBase::screenViewBase() :
    animationEndedCallback(this, &screenViewBase::animationEndedCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    animatedImage1.setXY(279, 9);
    animatedImage1.setBitmaps(BITMAP_GOLD_1_ID, BITMAP_GOLD_4_ID);
    animatedImage1.setUpdateTicksInterval(12);
    animatedImage1.startAnimation(false, true, true);
    animatedImage1.setDoneAction(animationEndedCallback);

    dynamicGraph1.setScale(1);
    dynamicGraph1.setPosition(0, 0, 320, 240);
    dynamicGraph1.setGraphAreaMargin(0, 0, 0, 0);
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
    dynamicGraph1.setGraphRangeY(0, 100);

    dynamicGraph1MajorYAxisGrid.setScale(1);
    dynamicGraph1MajorYAxisGrid.setColor(touchgfx::Color::getColorFrom24BitRGB(140, 140, 140));
    dynamicGraph1MajorYAxisGrid.setInterval(25);
    dynamicGraph1MajorYAxisGrid.setLineWidth(1);
    dynamicGraph1MajorYAxisGrid.setAlpha(124);
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);

    dynamicGraph1Line1.setScale(1);
    dynamicGraph1Line1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(20, 151, 197));
    dynamicGraph1Line1.setPainter(dynamicGraph1Line1Painter);
    dynamicGraph1Line1.setLineWidth(2);
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);

    add(__background);
    add(animatedImage1);
    add(dynamicGraph1);
}

void screenViewBase::setupScreen()
{

}

void screenViewBase::animationEndedCallbackHandler(const touchgfx::AnimatedImage& src)
{
    if (&src == &animatedImage1)
    {
        //int_update
        //When animatedImage1 animation ended call virtual function
        //Call add_new_data
        add_new_data();
    }
}
